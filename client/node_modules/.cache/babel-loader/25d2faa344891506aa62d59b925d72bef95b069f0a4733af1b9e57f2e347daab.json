{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YaaSa\\\\OneDrive - Institut Teccart\\\\Documents\\\\s6_projects\\\\SchoolBag\\\\client\\\\src\\\\components\\\\notifications\\\\NotificationDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Bell, X, CheckCircle, Clock, BookOpen, Calendar, AlertCircle } from 'lucide-react';\nimport { useNotifications } from '../../context/NotificationContext';\nimport './NotificationDropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationDropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [showUnreadOnly, setShowUnreadOnly] = useState(false);\n  const dropdownRef = useRef(null);\n  const {\n    notifications,\n    unreadCount,\n    loading,\n    fetchNotifications,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification\n  } = useNotifications();\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Fetch notifications when dropdown opens\n  useEffect(() => {\n    if (isOpen) {\n      fetchNotifications(showUnreadOnly);\n    }\n  }, [isOpen, showUnreadOnly]);\n  const handleBellClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleNotificationClick = async notification => {\n    if (!notification.isRead) {\n      await markAsRead(notification._id);\n    }\n  };\n  const handleMarkAllRead = async () => {\n    await markAllAsRead();\n  };\n  const handleDeleteNotification = async (e, notificationId) => {\n    e.stopPropagation();\n    await deleteNotification(notificationId);\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'task_completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"notification-type-icon completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this);\n      case 'task_due':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"notification-type-icon due\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this);\n      case 'task_overdue':\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"notification-type-icon overdue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this);\n      case 'task_reminder':\n        return /*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"notification-type-icon reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"notification-type-icon system\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const formatTimeAgo = date => {\n    const now = new Date();\n    const notificationDate = new Date(date);\n    const diffInHours = Math.floor((now - notificationDate) / (1000 * 60 * 60));\n    if (diffInHours < 1) {\n      const diffInMinutes = Math.floor((now - notificationDate) / (1000 * 60));\n      return diffInMinutes < 1 ? 'Just now' : `${diffInMinutes}m ago`;\n    } else if (diffInHours < 24) {\n      return `${diffInHours}h ago`;\n    } else {\n      const diffInDays = Math.floor(diffInHours / 24);\n      return `${diffInDays}d ago`;\n    }\n  };\n  const displayedNotifications = showUnreadOnly ? notifications.filter(n => !n.isRead) : notifications;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-dropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `notification-bell ${isOpen ? 'active' : ''}`,\n      onClick: handleBellClick,\n      title: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(Bell, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount > 99 ? '99+' : unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-dropdown-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-toggle ${showUnreadOnly ? 'active' : ''}`,\n            onClick: () => setShowUnreadOnly(!showUnreadOnly),\n            title: showUnreadOnly ? 'Show all' : 'Show unread only',\n            children: showUnreadOnly ? 'All' : 'Unread'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), unreadCount > 0 && !showUnreadOnly && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mark-all-read\",\n            onClick: handleMarkAllRead,\n            title: \"Mark all as read\",\n            children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading notifications...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this) : displayedNotifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-empty\",\n          children: [/*#__PURE__*/_jsxDEV(Bell, {\n            size: 48,\n            className: \"empty-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: showUnreadOnly ? 'No unread notifications' : 'No notifications yet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: showUnreadOnly ? 'All caught up! ðŸŽ‰' : 'When you have new notifications, they\\'ll show up here.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-list\",\n          children: displayedNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `notification-item ${!notification.isRead ? 'unread' : ''}`,\n            onClick: () => handleNotificationClick(notification),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-icon\",\n              children: getNotificationIcon(notification.type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-content-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"notification-title\",\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"notification-message\",\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-time\",\n                  children: formatTimeAgo(notification.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), notification.relatedTask && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notification-task\",\n                  children: [\"\\u2022 \", notification.relatedTask.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-actions\",\n              children: [!notification.isRead && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"unread-indicator\",\n                title: \"Unread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-notification\",\n                onClick: e => handleDeleteNotification(e, notification._id),\n                title: \"Delete notification\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this)]\n          }, notification._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), displayedNotifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-count\",\n          children: showUnreadOnly ? `${displayedNotifications.length} unread` : `${displayedNotifications.length} of ${notifications.length}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationDropdown, \"sCAh8SpUpcQ3LSiLjczDaKy0pKU=\", false, function () {\n  return [useNotifications];\n});\n_c = NotificationDropdown;\nexport default NotificationDropdown;\nvar _c;\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Bell","X","CheckCircle","Clock","BookOpen","Calendar","AlertCircle","useNotifications","jsxDEV","_jsxDEV","NotificationDropdown","_s","isOpen","setIsOpen","showUnreadOnly","setShowUnreadOnly","dropdownRef","notifications","unreadCount","loading","fetchNotifications","markAsRead","markAllAsRead","deleteNotification","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleBellClick","handleNotificationClick","notification","isRead","_id","handleMarkAllRead","handleDeleteNotification","e","notificationId","stopPropagation","getNotificationIcon","type","className","fileName","_jsxFileName","lineNumber","columnNumber","formatTimeAgo","date","now","Date","notificationDate","diffInHours","Math","floor","diffInMinutes","diffInDays","displayedNotifications","filter","n","ref","children","onClick","title","size","length","map","message","createdAt","relatedTask","_c","$RefreshReg$"],"sources":["C:/Users/YaaSa/OneDrive - Institut Teccart/Documents/s6_projects/SchoolBag/client/src/components/notifications/NotificationDropdown.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Bell, X, CheckCircle, Clock, BookOpen, Calendar, AlertCircle } from 'lucide-react';\r\nimport { useNotifications } from '../../context/NotificationContext';\r\nimport './NotificationDropdown.css';\r\n\r\nconst NotificationDropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [showUnreadOnly, setShowUnreadOnly] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n  \r\n  const {\r\n    notifications,\r\n    unreadCount,\r\n    loading,\r\n    fetchNotifications,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    deleteNotification\r\n  } = useNotifications();\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  // Fetch notifications when dropdown opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      fetchNotifications(showUnreadOnly);\r\n    }\r\n  }, [isOpen, showUnreadOnly]);\r\n\r\n  const handleBellClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleNotificationClick = async (notification) => {\r\n    if (!notification.isRead) {\r\n      await markAsRead(notification._id);\r\n    }\r\n  };\r\n\r\n  const handleMarkAllRead = async () => {\r\n    await markAllAsRead();\r\n  };\r\n\r\n  const handleDeleteNotification = async (e, notificationId) => {\r\n    e.stopPropagation();\r\n    await deleteNotification(notificationId);\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'task_completed':\r\n        return <CheckCircle className=\"notification-type-icon completed\" />;\r\n      case 'task_due':\r\n        return <Clock className=\"notification-type-icon due\" />;\r\n      case 'task_overdue':\r\n        return <AlertCircle className=\"notification-type-icon overdue\" />;\r\n      case 'task_reminder':\r\n        return <Calendar className=\"notification-type-icon reminder\" />;\r\n      default:\r\n        return <BookOpen className=\"notification-type-icon system\" />;\r\n    }\r\n  };\r\n\r\n  const formatTimeAgo = (date) => {\r\n    const now = new Date();\r\n    const notificationDate = new Date(date);\r\n    const diffInHours = Math.floor((now - notificationDate) / (1000 * 60 * 60));\r\n    \r\n    if (diffInHours < 1) {\r\n      const diffInMinutes = Math.floor((now - notificationDate) / (1000 * 60));\r\n      return diffInMinutes < 1 ? 'Just now' : `${diffInMinutes}m ago`;\r\n    } else if (diffInHours < 24) {\r\n      return `${diffInHours}h ago`;\r\n    } else {\r\n      const diffInDays = Math.floor(diffInHours / 24);\r\n      return `${diffInDays}d ago`;\r\n    }\r\n  };\r\n\r\n  const displayedNotifications = showUnreadOnly \r\n    ? notifications.filter(n => !n.isRead)\r\n    : notifications;\r\n\r\n  return (\r\n    <div className=\"notification-dropdown\" ref={dropdownRef}>\r\n      {/* Bell Icon */}\r\n      <button\r\n        className={`notification-bell ${isOpen ? 'active' : ''}`}\r\n        onClick={handleBellClick}\r\n        title=\"Notifications\"\r\n      >\r\n        <Bell size={20} />\r\n        {unreadCount > 0 && (\r\n          <span className=\"notification-badge\">\r\n            {unreadCount > 99 ? '99+' : unreadCount}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {/* Dropdown */}\r\n      {isOpen && (\r\n        <div className=\"notification-dropdown-menu\">\r\n          {/* Header */}\r\n          <div className=\"notification-header\">\r\n            <h3>Notifications</h3>\r\n            <div className=\"notification-header-actions\">\r\n              <button\r\n                className={`filter-toggle ${showUnreadOnly ? 'active' : ''}`}\r\n                onClick={() => setShowUnreadOnly(!showUnreadOnly)}\r\n                title={showUnreadOnly ? 'Show all' : 'Show unread only'}\r\n              >\r\n                {showUnreadOnly ? 'All' : 'Unread'}\r\n              </button>\r\n              {unreadCount > 0 && !showUnreadOnly && (\r\n                <button\r\n                  className=\"mark-all-read\"\r\n                  onClick={handleMarkAllRead}\r\n                  title=\"Mark all as read\"\r\n                >\r\n                  <CheckCircle size={16} />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Content */}\r\n          <div className=\"notification-content\">\r\n            {loading ? (\r\n              <div className=\"notification-loading\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <span>Loading notifications...</span>\r\n              </div>\r\n            ) : displayedNotifications.length === 0 ? (\r\n              <div className=\"notification-empty\">\r\n                <Bell size={48} className=\"empty-icon\" />\r\n                <h4>\r\n                  {showUnreadOnly \r\n                    ? 'No unread notifications' \r\n                    : 'No notifications yet'\r\n                  }\r\n                </h4>\r\n                <p>\r\n                  {showUnreadOnly \r\n                    ? 'All caught up! ðŸŽ‰' \r\n                    : 'When you have new notifications, they\\'ll show up here.'\r\n                  }\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"notification-list\">\r\n                {displayedNotifications.map((notification) => (\r\n                  <div\r\n                    key={notification._id}\r\n                    className={`notification-item ${!notification.isRead ? 'unread' : ''}`}\r\n                    onClick={() => handleNotificationClick(notification)}\r\n                  >\r\n                    <div className=\"notification-icon\">\r\n                      {getNotificationIcon(notification.type)}\r\n                    </div>\r\n                    \r\n                    <div className=\"notification-content-text\">\r\n                      <h4 className=\"notification-title\">\r\n                        {notification.title}\r\n                      </h4>\r\n                      <p className=\"notification-message\">\r\n                        {notification.message}\r\n                      </p>\r\n                      <div className=\"notification-meta\">\r\n                        <span className=\"notification-time\">\r\n                          {formatTimeAgo(notification.createdAt)}\r\n                        </span>\r\n                        {notification.relatedTask && (\r\n                          <span className=\"notification-task\">\r\n                            â€¢ {notification.relatedTask.title}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"notification-actions\">\r\n                      {!notification.isRead && (\r\n                        <div className=\"unread-indicator\" title=\"Unread\"></div>\r\n                      )}\r\n                      <button\r\n                        className=\"delete-notification\"\r\n                        onClick={(e) => handleDeleteNotification(e, notification._id)}\r\n                        title=\"Delete notification\"\r\n                      >\r\n                        <X size={16} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          {displayedNotifications.length > 0 && (\r\n            <div className=\"notification-footer\">\r\n              <span className=\"notification-count\">\r\n                {showUnreadOnly \r\n                  ? `${displayedNotifications.length} unread`\r\n                  : `${displayedNotifications.length} of ${notifications.length}`\r\n                }\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationDropdown; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}